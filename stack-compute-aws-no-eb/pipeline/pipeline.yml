---
# YAML anchors
shared:
# Task : sync and merge with rsync 2 rep. Used to merge stack and config
- &merge-stack-and-config
  platform: "linux"
  image_resource:
    type: "registry-image"
    source:
      repository: "cycloid/cycloid-toolkit"
      tag: "latest"
  run:
    path: "/usr/bin/merge-stack-and-config"

resource_types:
- name: "terraform"
  type: "registry-image"
  source:
    repository: "cycloid/terraform-resource"
    tag: "((terraform_version))"

resources:
- name: "tfstate"
  type: "terraform"
  icon: "terraform"
  source:
    backend_type: "s3"
    backend_config:
      bucket: cycloid-sandbox-terraform-remote-state
      key: "($ .organization_canonical $)-($ .project $)-($ .environment $)-($ .component $)"
      workspace_key_prefix: "($ .organization_canonical $)-($ .project $)"
      region: eu-west-1
      access_key: ((aws-demo-account.access_key))
      secret_key: ((aws-demo-account.secret_key))
    vars:
      aws_cred: "((aws_cred))"
      aws_region: "((aws_region))"
      component: "($ .component $)"
      env: "($ .environment $)"
      project: "($ .project $)"
      customer: "($ .organization_canonical $)"

# The Terraform stack (will be merged with the config)
- name: "git_stack-terraform"
  type: "git"
  icon: "github-circle"
  source:
    uri: "($ .scs_url $)"
    branch: "($ .scs_branch $)"
    private_key: "((($ .scs_cred_path $).ssh_key))"
    paths:
    - ($ .stack_path $)/terraform/*

# The Terraform config (will be merged with the stack)
- name: "git_config-terraform"
  type: "git"
  icon: "github-circle"
  source:
    uri: "($ .cr_url $)"
    branch: "($ .cr_branch $)"
    private_key: "((($ .cr_cred_path $).ssh_key))"
    paths:
    - "($ .organization_canonical $)/($ .project $)/($ .environment $)/($ .component $)/terraform/*"

groups:
- name: "overview"
  jobs:
  - "terraform-plan"
  - "terraform-apply"

- name: "destroy"
  jobs:
  - "terraform-destroy"

jobs:
  # Merge and trigger a plan whenever there is a commit in Terraform stack or config

- name: "terraform-plan"
  serial: true
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
  - in_parallel:
    - get: "git_stack-terraform"
      trigger: false

    - get: "git_config-terraform"
      trigger: false

  - task: "merge-stack-and-config"
    config:
      <<: *merge-stack-and-config
      inputs:
      - name: "git_config-terraform"
        path: "config"
      - name: "git_stack-terraform"
        path: "stack"
      outputs:
      - name: "merged-stack"
        path: "merged-stack"
    params:
      CONFIG_PATH: "($ .organization_canonical $)/($ .project $)/($ .environment $)/($ .component $)/terraform/"
      STACK_PATH: "($ .stack_path $)/terraform"

  - put: "tfstate"
    params:
      plan_only: true
      terraform_source: "merged-stack/"

  # Merge and trigger an apply whenever there is a terraform plan passed successfully
- name: "terraform-apply"
  serial: true
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
  - in_parallel:
    - get: "git_stack-terraform"
      trigger: false
      passed:
      - "terraform-plan"

    - get: "git_config-terraform"
      trigger: false
      passed:
      - "terraform-plan"

    - get: "tfstate"
      trigger: false
      passed:
      - "terraform-plan"

  - task: "merge-stack-and-config"
    config:
      <<: *merge-stack-and-config
      inputs:
      - name: "git_config-terraform"
        path: "config"
      - name: "git_stack-terraform"
        path: "stack"
      outputs:
      - name: "merged-stack"
        path: "merged-stack"
    params:
      CONFIG_PATH: "($ .organization_canonical $)/($ .project $)/($ .environment $)/($ .component $)/terraform/"
      STACK_PATH: "($ .stack_path $)/terraform"

  - put: "tfstate"
    params:
      plan_run: true
      terraform_source: "merged-stack/"

  # Destroy the infrastructure
- name: "terraform-destroy"
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
  - in_parallel:
    - get: "git_stack-terraform"
      trigger: false
      passed:
      - "terraform-plan"

    - get: "git_config-terraform"
      trigger: false
      passed:
      - "terraform-plan"

    - get: "tfstate"
      trigger: false

  - task: "merge-stack-and-config"
    config:
      <<: *merge-stack-and-config
      inputs:
      - name: "git_config-terraform"
        path: "config"
      - name: "git_stack-terraform"
        path: "stack"
      outputs:
      - name: "merged-stack"
        path: "merged-stack"
    params:
      CONFIG_PATH: "($ .organization_canonical $)/($ .project $)/($ .environment $)/($ .component $)/terraform/"
      STACK_PATH: "($ .stack_path $)/terraform"

  - put: "tfstate"
    params:
      action: "destroy"
      terraform_source: "merged-stack/"
    get_params:
      action: "destroy"
